{{!< default}}

<section class="collab-section gh-container">
  <div class="collab-card gh-card">
    <h2 class="gh-card-title">Interested in Collaborating?</h2>
    <p class="gh-card-excerpt">
      We’re always looking to feature inspiring artists, facilitators, bands, and creative contributors.
      Becoming a member of our community gives you priority access to book spaces, use high-quality equipment,
      and host your own events. If this resonates with your vision, we’d love to hear from you.
    </p>
  </div>
</section>

<section class="contact-section">
  <h2 class="section-title">Contact Us</h2>
  <form id="contactForm" class="contact-form">
    <input type="text" name="name" placeholder="Your Name" required />
    <input type="email" name="email" placeholder="Your Email" required />
    <textarea name="message" placeholder="Your Message" required></textarea>

    <div class="g-recaptcha" data-sitekey="6Ld0NzYrAAAAAO9p29r0lAI__ztISnOaJ6UEocLH"></div>

    <button type="submit">Send Message</button>
    <p id="form-status" class="status-message"></p>
  </form>
</section>

<style>
  .contact-section {
    max-width: 600px;
    margin: 3rem auto;
    padding: 1rem;
    color: var(--text-color);
  }

  .contact-form input,
  .contact-form textarea {
    width: 100%;
    margin: 0.5rem 0;
    padding: 0.75rem;
    border: 1px solid #444;
    background: #1e1e1e;
    color: #fff;
    border-radius: 5px;
  }

  .contact-form button {
    background-color: var(--accent-color);
    color: white;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 6px;
    cursor: pointer;
  }

  .status-message {
    margin-top: 1rem;
    font-size: 0.9rem;
  }
</style>

<script src="https://www.google.com/recaptcha/api.js" async defer></script>
<script>
document.getElementById("contactForm").addEventListener("submit", async (e) => {
  e.preventDefault();
  const form = e.target;
  const status = document.getElementById("form-status");

  const captchaResponse = grecaptcha.getResponse();
  if (!captchaResponse) {
    status.textContent = "Please complete the CAPTCHA.";
    return;
  }

  const payload = {
    name: form.name.value,
    email: form.email.value,
    message: form.message.value,
    interest: form.interest?.value || "",
    preferred_dates: form.preferred_dates?.value || "",
    details: form.details?.value || "",
    source: form.source?.value || "Contact-Us",
    "g-recaptcha-response": captchaResponse,
    spreadsheetId: "1E45f3vjLTwZ8SaL0DnzZDOaqO0OKwVDtQ-KySkM2fUs", // Specify the Google Sheet ID
    sheetName: "contact1" // Specify the sheet tab name
  };

  try {
    // Use the proxy API URL (Google Script URL is now handled in the proxy's .env file)
    const FORMS_API_URL = "{{@custom.proxy_api_url}}{{@custom.forms_suffix}}";
    
    // Use the proxy URL directly
    const proxyUrl = FORMS_API_URL;
    
    // Debug: Log the URL being used
    console.log("Form submission URL:", proxyUrl);
    
    const response = await fetch(proxyUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(payload)
    });

    // If the server redirects to a success page, follow it
    if (response.redirected) {
      window.location.href = response.url;
      return;
    }

    // Check if response is ok and content type is JSON
    if (!response.ok) {
      const errorText = await response.text();
      console.error("Response not ok:", response.status, response.statusText, errorText);
      status.textContent = `Server error: ${response.status} ${response.statusText}`;
      return;
    }

    // Check content type before parsing as JSON
    const contentType = response.headers.get("content-type");
    if (!contentType || !contentType.includes("application/json")) {
      const responseText = await response.text();
      console.error("Non-JSON response:", contentType, responseText.substring(0, 200));
      status.textContent = "Server returned unexpected response format";
      return;
    }

    const result = await response.json();
    if (result.result === "success") {
      status.textContent = "Message sent successfully!";
      form.reset();
      grecaptcha.reset();
    } else {
      status.textContent = result.message || "Error sending message.";
    }
  } catch (err) {
    console.error(err);
    status.textContent = "Failed to connect. Try again later.";
  }
});
</script>

