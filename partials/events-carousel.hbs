<section class="events-carousel">
  <h2 class="gh-section-title" style="text-align: center; margin-bottom: 1.5rem; color: var(--text-color);">
    Upcoming Events
  </h2>
  <hr class="section-divider">

  <a href="{{@site.url}}/events" class="carousel-link-wrapper">
    <div class="carousel-track-container">
      <div class="carousel-track" id="eventCarouselTrack"></div>
    </div>
  </a>

  {{!-- for testing --}}
  <!--
  <p>{{@custom.proxy_api_url}}{{@custom.events_suffix}}?tags={{@custom.events_tags}}</p>
-->
</section>

<script>
  const carouselTrack = document.getElementById('eventCarouselTrack');
  let events = [];

  const API_URL = "{{@custom.proxy_api_url}}{{@custom.events_suffix}}";
  const DEFAULT_TAGS = "{{@custom.events_tags}}";

  function createEventCard(event) {
    const thumbUrl = event.thumb_image_url || '/assets/default-thumb.jpg';
    
    const wrapper = document.createElement('a');
    
    // If event has an ID, link to single event page, otherwise to events page
    if (event.id) {
      wrapper.href = `/event-single/?event-id=${event.id}`;
      wrapper.className = 'event-card clickable-event';
    } else {
      wrapper.href = '/events';
      wrapper.className = 'event-card';
    }
    
    wrapper.innerHTML = `
      <div class="event-media">
        <img src="${thumbUrl}" alt="${event.title || 'Event image'}">
        <h6>${event.title}</h6>
      </div>
    `;
    
    return wrapper;
  }

  function updateCarousel() {
    carouselTrack.innerHTML = '';
    events.forEach(event => {
      carouselTrack.appendChild(createEventCard(event));
    });
  }

  async function loadEvents() {
    try {
      const tags = DEFAULT_TAGS
        .split(',')
        .map(t => t.trim())
        .filter(Boolean);

      const body = {
        tags,
        tag_logic: 'or',
        startDate: new Date().toISOString(),
        endDate: null
      };

      const res = await fetch(API_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(body)
      });

      if (!res.ok) throw new Error(`Fetch failed: ${res.status}`);
      events = await res.json();

      if (!events.length) {
        carouselTrack.innerHTML = '<p style="padding:1rem;">No upcoming events</p>';
      } else {
        updateCarousel();
      }
    } catch (err) {
      console.error("[Carousel] Error loading events:", err);
      carouselTrack.innerHTML = '<p style="padding:1rem;">Unable to load events</p>';
    }
  }

  loadEvents();
</script>
